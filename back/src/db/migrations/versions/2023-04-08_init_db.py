"""Init db

Revision ID: e8a8f9fdd013
Revises:
Create Date: 2023-04-08 22:01:32.948925

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e8a8f9fdd013"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "section",
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("weight", sa.Integer(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_section_name"), "section", ["name"], unique=False)
    op.create_table(
        "status",
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_status_name"), "status", ["name"], unique=False)
    op.create_table(
        "target_type",
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_target_type_name"), "target_type", ["name"], unique=False)
    op.create_table(
        "user",
        sa.Column("type", sa.String(64), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("hashed_password", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "workgroup",
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_workgroup_name"), "workgroup", ["name"], unique=False)
    op.create_table(
        "field",
        sa.Column("target_type_id", sa.Integer(), nullable=False),
        sa.Column("section_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("is_required", sa.Boolean(), nullable=False),
        sa.Column("field_type", sa.String(64), nullable=False),
        sa.Column(
            "default_value", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("weight", sa.Integer(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(["section_id"], ["section.id"], ondelete="cascade"),
        sa.ForeignKeyConstraint(
            ["target_type_id"], ["target_type.id"], ondelete="cascade"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_field_field_type"), "field", ["field_type"], unique=False)
    op.create_index(op.f("ix_field_name"), "field", ["name"], unique=True)
    op.create_table(
        "target",
        sa.Column("target_type_id", sa.Integer(), nullable=False),
        sa.Column("status_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=1024), nullable=False),
        sa.Column("address", sa.String(length=1024), nullable=False),
        sa.Column("area", sa.String(length=256), nullable=False),
        sa.Column("district", sa.String(length=256), nullable=False),
        sa.Column("square", sa.Float(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(["status_id"], ["status.id"], ondelete="cascade"),
        sa.ForeignKeyConstraint(
            ["target_type_id"], ["target_type.id"], ondelete="cascade"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "workgroup_target_type",
        sa.Column("workgroup_id", sa.BigInteger(), nullable=False),
        sa.Column("target_type_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["target_type_id"],
            ["target_type.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workgroup_id"],
            ["workgroup.id"],
        ),
        sa.PrimaryKeyConstraint("workgroup_id", "target_type_id"),
        sa.UniqueConstraint(
            "workgroup_id",
            "target_type_id",
            name="uq__workgroup_target_type__work_group_id_target_type_id",
        ),
    )
    op.create_table(
        "workgroup_user",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("workgroup_id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workgroup_id"],
            ["workgroup.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "workgroup_id"),
        sa.UniqueConstraint(
            "user_id", "workgroup_id", name="uq__workgroup_user__user_id_workgroup_id"
        ),
    )
    op.create_table(
        "target_field",
        sa.Column("field_id", sa.Integer(), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.Column("value", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(["field_id"], ["field.id"], ondelete="cascade"),
        sa.ForeignKeyConstraint(["target_id"], ["target.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "task",
        sa.Column("author_id", sa.Integer(), nullable=False),
        sa.Column("executor_id", sa.Integer(), nullable=False),
        sa.Column("target_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=512), nullable=False),
        sa.Column("description", sa.String(length=2048), nullable=False),
        sa.Column(
            "assign_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("deadline", sa.DateTime(), nullable=False),
        sa.Column("status", sa.String(64), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(["author_id"], ["user.id"], ondelete="cascade"),
        sa.ForeignKeyConstraint(["executor_id"], ["user.id"], ondelete="cascade"),
        sa.ForeignKeyConstraint(["target_id"], ["target.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_task_name"), "task", ["name"], unique=False)
    op.create_table(
        "content",
        sa.Column("target_id", sa.Integer(), nullable=True),
        sa.Column("task_id", sa.Integer(), nullable=True),
        sa.Column("name", sa.String(length=1024), nullable=False),
        sa.Column("path", sa.String(length=2048), nullable=False),
        sa.Column("type", sa.String(64), nullable=False),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.ForeignKeyConstraint(["target_id"], ["target.id"], ondelete="cascade"),
        sa.ForeignKeyConstraint(["task_id"], ["task.id"], ondelete="cascade"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("content")
    op.drop_index(op.f("ix_task_name"), table_name="task")
    op.drop_table("task")
    op.drop_table("target_field")
    op.drop_table("workgroup_user")
    op.drop_table("workgroup_target_type")
    op.drop_table("target")
    op.drop_index(op.f("ix_field_name"), table_name="field")
    op.drop_index(op.f("ix_field_field_type"), table_name="field")
    op.drop_table("field")
    op.drop_index(op.f("ix_workgroup_name"), table_name="workgroup")
    op.drop_table("workgroup")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_target_type_name"), table_name="target_type")
    op.drop_table("target_type")
    op.drop_index(op.f("ix_status_name"), table_name="status")
    op.drop_table("status")
    op.drop_index(op.f("ix_section_name"), table_name="section")
    op.drop_table("section")
    # ### end Alembic commands ###
